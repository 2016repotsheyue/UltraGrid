#!/bin/bash

# functions
###########################################################

function dvsdriver_load {
  TYPE=$1
  BOARD=$2

  if [ "$TYPE" = "release" ]; then
    DRIVER_NAME="dvsdriver"
  else
    DRIVER_NAME="dvsdebug"
  fi

  if ! [ -f ./$DRIVER_NAME$BOARD.ko ]; then
    echo "- The driver $DRIVER_NAME$BOARD.ko is not available."
    echo "  Please run: ./driver_create"
  else
    if insmod ./$DRIVER_NAME$BOARD.ko hwpath=`pwd` 2>/dev/null; then
      echo "- loaded $DRIVER_NAME$BOARD $TYPE"
    else
      echo "- unable to load $DRIVER_NAME$BOARD $TYPE"
    fi
  fi
}

function help {
  echo "usage: $0 [...]"
  echo "       driver_load        - load all release driver"
  echo "       driver_load debug  - load all debug driver"
  echo "       driver_load lucy   - load only the Centaurus I/II release driver"
  echo "       driver_load v4r3   - load only the Atomix release driver"
  echo "       driver_load help   - this usage list"
}


# main
###########################################################

# Security check
if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root."
  exit 1
fi

# Start message
echo "Try to load the DVS video board drivers:"

if [ "$1" != "" ]; then
  if [ "$1" = "debug" ]; then
    dvsdriver_load debug _lucy
    dvsdriver_load debug _v4r3
  
  elif [ "$1" = "lucy" ]; then
    dvsdriver_load release _lucy
  
  elif [ "$1" = "v4r3" ]; then
    dvsdriver_load release _v4r3
  
  else
    help
    exit 1
  fi
else
  dvsdriver_load release _lucy
  dvsdriver_load release _v4r3
fi

# Create dynamic device nodes
./mkdev

exit 0

